# Generated by Django 3.2 on 2023-05-09 13:35

import book_store_app.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('pk_user', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('mobile', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='mobile')),
                ('is_staff', models.BooleanField(default=True, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='superuser')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('otp', models.IntegerField(blank=True, null=True)),
                ('otp_verified', models.BooleanField(default=False)),
                ('otp_link', models.TextField(blank=True, null=True, unique=True)),
                ('otp_created_time', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', book_store_app.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BBComponents',
            fields=[
                ('pk_component', models.AutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=55, unique=True)),
                ('description', models.CharField(blank=True, max_length=55, null=True)),
            ],
            options={
                'db_table': 'components',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BBRoles',
            fields=[
                ('pk_role', models.AutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=55, unique=True)),
                ('description', models.CharField(blank=True, max_length=55, null=True)),
            ],
            options={
                'db_table': 'roles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('pk_book', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=55)),
                ('author', models.CharField(max_length=55)),
                ('genre', models.CharField(max_length=55)),
                ('thumbnail', models.FileField(upload_to='media/')),
                ('descriptions', models.TextField(blank=True)),
                ('publisher', models.CharField(max_length=55)),
                ('price', models.FloatField()),
                ('total_stock', models.IntegerField(default=0)),
                ('in_stock', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'books',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('pk_ticket', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(max_length=55)),
                ('description', models.TextField()),
                ('is_closed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('fk_user', models.ForeignKey(db_column='fk_user', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ticket',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserCart',
            fields=[
                ('pk_cart', models.AutoField(primary_key=True, serialize=False)),
                ('items', models.IntegerField(default=0)),
                ('total_price', models.FloatField(default=0.0)),
                ('fk_book', models.ForeignKey(db_column='fk_book', on_delete=django.db.models.deletion.CASCADE, to='book_store_app.books')),
                ('fk_user', models.ForeignKey(db_column='fk_user', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'usercart',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('pk_user_notification', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=55)),
                ('body', models.TextField()),
            ],
            options={
                'db_table': 'user_notification',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserPropertiesTypes',
            fields=[
                ('pk_user_property_type', models.AutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=55, unique=True)),
                ('description', models.CharField(blank=True, max_length=55, null=True)),
            ],
            options={
                'db_table': 'users_properties_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserProperties',
            fields=[
                ('pk_user_property', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('fk_user', models.ForeignKey(db_column='fk_user', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('fk_user_property_type', models.ForeignKey(db_column='fk_user_property_type', on_delete=django.db.models.deletion.DO_NOTHING, to='book_store_app.userpropertiestypes')),
            ],
            options={
                'db_table': 'users_properties',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserProduct',
            fields=[
                ('pk_user_product', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('fk_user_cart', models.ForeignKey(db_column='fk_user', on_delete=django.db.models.deletion.CASCADE, to='book_store_app.usercart')),
            ],
            options={
                'db_table': 'user_product',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TicketConversation',
            fields=[
                ('pk_ticket_conversation', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('name', models.CharField(max_length=55)),
                ('admin_name', models.CharField(max_length=55)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('fk_ticket', models.ForeignKey(db_column='fk_user', on_delete=django.db.models.deletion.CASCADE, to='book_store_app.ticket')),
            ],
            options={
                'db_table': 'ticket_conversation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BBUserRoles',
            fields=[
                ('pk_user_role', models.AutoField(primary_key=True, serialize=False)),
                ('fk_role', models.ForeignKey(db_column='fk_role', on_delete=django.db.models.deletion.CASCADE, to='book_store_app.bbroles')),
                ('fk_user', models.ForeignKey(db_column='fk_user', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'users_roles',
                'managed': True,
                'unique_together': {('fk_user', 'fk_role')},
            },
        ),
        migrations.CreateModel(
            name='BBUserComponents',
            fields=[
                ('pk_user_component', models.AutoField(primary_key=True, serialize=False)),
                ('fk_component', models.ForeignKey(db_column='fk_component', on_delete=django.db.models.deletion.CASCADE, to='book_store_app.bbcomponents')),
                ('fk_user', models.ForeignKey(db_column='fk_user', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'users_components',
                'managed': True,
                'unique_together': {('fk_user', 'fk_component')},
            },
        ),
        migrations.CreateModel(
            name='BBRolesComponents',
            fields=[
                ('pk_role_component', models.AutoField(primary_key=True, serialize=False)),
                ('fk_component', models.ForeignKey(db_column='fk_component', on_delete=django.db.models.deletion.CASCADE, to='book_store_app.bbcomponents')),
                ('fk_role', models.ForeignKey(db_column='fk_role', on_delete=django.db.models.deletion.CASCADE, to='book_store_app.bbroles')),
            ],
            options={
                'db_table': 'roles_components',
                'managed': True,
                'unique_together': {('fk_role', 'fk_component')},
            },
        ),
    ]
